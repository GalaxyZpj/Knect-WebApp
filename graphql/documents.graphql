# USER
mutation TokenAuth($username: String!, $password: String!) {
  tokenAuth(username: $username, password: $password) {
    token
    payload
    refreshToken
    refreshExpiresIn
    user {
      username
      profile {
        firstName
        lastName
      }
    }
  }
}

mutation VerifyToken($token: String!) {
  verifyToken(token: $token) {
    payload
  }
}

mutation RefreshToken($refreshToken: String!) {
  refreshToken(refreshToken: $refreshToken) {
    token
    payload
    refreshToken
    refreshExpiresIn
  }
}

mutation RevokeToken($refreshToken: String!) {
  revokeToken(refreshToken: $refreshToken) {
    revoked
  }
}

mutation RegisterUser(
  $username: String!
  $password: String!
  $email: String!
  $mobile: String!
  $firstName: String!
  $lastName: String!
  $gender: String!
  $dob: Date!
) {
  createUser(
    userData: {
      user: {
        username: $username
        email: $email
        mobile: $mobile
        password: $password
      }
      profile: {
        firstName: $firstName
        lastName: $lastName
        gender: $gender
        dob: $dob
      }
    }
  ) {
    user {
      id
      username
    }
  }
}

query FetchAllUsers {
  userList {
    username
		profile {
      firstName
      lastName
    }
  }
}

query FetchUser($userId: String!) {
  user(userId: $userId) {
    username
    email
    mobile
    profile {
      firstName
      lastName
      gender
      dob
      friends {
        profile{
          firstName
          lastName
        }
      }
    }
  }
}

# DASHBOARD
query FetchFriends {
  friendList {
    profile {
      firstName
      lastName
    }
  }
}

query MyPosts {
  myPosts {
    id
    user {
      id
      username
      profile {
        firstName
        lastName
      }
    }
    shareWith
    content
    likes
    usersLiked {
      id
      username
      profile {
        firstName
        lastName
      }
    }
    friendsTagged {
      id
      username
      profile {
        firstName
        lastName
      }
    }
    feeling {
      id
      name
      emoticon
    }
    subActivity {
      id
      name
      emoticon
    }
    location
    liked
    images {
      id
      image
    }
    videos {
      id
      video
    }
    gifs {
      id
      gif
    }
    comments {
      id
      content
      user {
        id
        username
        profile {
          firstName
          lastName
        }
      }
    }
  }
}

mutation feeling($name: String!, $emoticon: Upload!) {
  createFeeling(name: $name, emoticon: $emoticon) {
    expression {
      id
      name
      emoticon
    }
  }
}

mutation CreatePost(
  $shareWith: String!,
  $content: String!,
  $friendsTagged: [String!],
  $feelingId: String,
  $subActivityId: String,
  $location: String,
  $images: [Upload!],
  $videos: [Upload!],
  $gifs: [Upload!]
) {
  createPost(postData: {
    shareWith: $shareWith,
    content: $content,
    friendsTagged: $friendsTagged,
    feelingId: $feelingId,
    subActivityId: $subActivityId,
    location: $location,
    images: $images,
    videos: $videos,
    gifs: $gifs
  }) {
    success
  }
}
